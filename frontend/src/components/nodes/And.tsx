import { Handle, Position } from "reactflow";

import { handleStyles } from "../../utils/handles";
import { useActiveNodes } from "../../utils/state";

const And = ({ id }: { id: string }) => {
  const activeNodes = useActiveNodes((state) => state.activeNodes);

  return (
    <>
      <svg
        width="161"
        height="68"
        viewBox="0 0 161 68"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M49.8212 2.54446L90.7309 4.09997L108.152 16.3884L112.352 33.9656L106.441 51.8539L95.0863 62.2758L74.7092 65.5423L48.4212 64.7646L49.8212 2.54446Z"
          fill={activeNodes.includes(id) ? "#F3E597" : "#EEEEEE"}
        />
        <path
          d="M113.768 33.7712H155.883M48.0682 16.9251H4.26837M49.7528 50.6173H4.26837"
          stroke="#C0C0C0"
          strokeWidth="3.36922"
        />
        <path
          d="M46.3835 0.07901V67.4634H80.8779C99.8599 67.4634 114.57 52.3018 114.57 33.7712C114.57 15.2406 99.8599 0.07901 80.8779 0.07901H46.3835ZM51.1967 4.89218H80.8779C97.3208 4.89218 108.955 17.7625 108.955 33.7712C108.955 49.7799 96.5186 62.6502 80.0757 62.6502H51.1967V4.89218Z"
          fill="#C0C0C0"
        />
        <rect
          x="0.899048"
          y="13.5559"
          width="6.73844"
          height="6.73844"
          fill="#B2B2B2"
        />
        <rect
          x="0.899048"
          y="47.248"
          width="6.73844"
          height="6.73844"
          fill="#B2B2B2"
        />
        <rect
          x="154.199"
          y="30.4019"
          width="6.73844"
          height="6.73844"
          fill="#B2B2B2"
        />
        <path
          d="M60.2816 38.9789L64.8469 27.1866H66.6999L71.2315 38.9789H69.2942L66.5988 31.8699C66.5652 31.7912 66.4978 31.6003 66.3967 31.2971C66.3069 30.9939 66.2002 30.6569 66.0766 30.2863C65.9531 29.9157 65.8408 29.5788 65.7397 29.2756C65.6386 28.9611 65.5712 28.7589 65.5375 28.6691L65.925 28.6523C65.8576 28.8432 65.7734 29.0846 65.6723 29.3766C65.5825 29.6686 65.4814 29.9775 65.3691 30.3032C65.268 30.6289 65.1669 30.9377 65.0659 31.2297C64.9648 31.5105 64.8805 31.7463 64.8132 31.9372L62.1346 38.9789H60.2816ZM62.3031 36.0477L62.9769 34.2957H68.334L69.1089 36.0477H62.3031ZM73.3069 38.9789V27.1866H74.941L82.1511 36.8395L81.8815 36.9911C81.8366 36.7103 81.7973 36.4071 81.7636 36.0814C81.7299 35.7445 81.6962 35.3907 81.6625 35.0201C81.6401 34.6382 81.6176 34.2395 81.5952 33.824C81.5839 33.3972 81.5727 32.9536 81.5615 32.4932C81.5502 32.0327 81.5446 31.5554 81.5446 31.0612V27.1866H83.364V38.9789H81.6962L74.604 29.6799L74.7893 29.444C74.8455 30.1291 74.8904 30.7131 74.9241 31.196C74.969 31.6677 75.0027 32.072 75.0252 32.4089C75.0589 32.7346 75.0813 33.0042 75.0926 33.2175C75.1038 33.4197 75.1094 33.5882 75.1094 33.7229C75.1206 33.8577 75.1263 33.9756 75.1263 34.0767V38.9789H73.3069ZM86.6653 38.9789V27.1866H91.2811C92.1234 27.1866 92.8815 27.327 93.5554 27.6078C94.2404 27.8886 94.8244 28.2929 95.3074 28.8207C95.7903 29.3486 96.1609 29.9719 96.4192 30.6906C96.6775 31.4094 96.8067 32.2068 96.8067 33.0828C96.8067 33.9588 96.6775 34.7618 96.4192 35.4918C96.1609 36.2105 95.7903 36.8338 95.3074 37.3617C94.8357 37.8783 94.2573 38.277 93.5722 38.5578C92.8871 38.8385 92.1234 38.9789 91.2811 38.9789H86.6653ZM88.4847 37.4122L88.4341 37.2269H91.1969C91.7921 37.2269 92.32 37.1315 92.7804 36.9405C93.2521 36.7496 93.6452 36.4801 93.9597 36.1319C94.2854 35.7725 94.5324 35.3345 94.7009 34.8179C94.8694 34.3013 94.9536 33.7229 94.9536 33.0828C94.9536 32.4426 94.8694 31.8699 94.7009 31.3645C94.5324 30.8479 94.2854 30.4099 93.9597 30.0505C93.634 29.6911 93.2409 29.4159 92.7804 29.225C92.32 29.0341 91.7921 28.9386 91.1969 28.9386H88.3836L88.4847 28.787V37.4122Z"
          fill="#C0C0C0"
        />
        <path
          d="M60.2816 38.9789L64.8469 27.1866H66.6999L71.2315 38.9789H69.2942L66.5988 31.8699C66.5652 31.7912 66.4978 31.6003 66.3967 31.2971C66.3069 30.9939 66.2002 30.6569 66.0766 30.2863C65.9531 29.9157 65.8408 29.5788 65.7397 29.2756C65.6386 28.9611 65.5712 28.7589 65.5375 28.6691L65.925 28.6523C65.8576 28.8432 65.7734 29.0846 65.6723 29.3766C65.5825 29.6686 65.4814 29.9775 65.3691 30.3032C65.268 30.6289 65.1669 30.9377 65.0659 31.2297C64.9648 31.5105 64.8805 31.7463 64.8132 31.9372L62.1346 38.9789H60.2816ZM62.3031 36.0477L62.9769 34.2957H68.334L69.1089 36.0477H62.3031ZM73.3069 38.9789V27.1866H74.941L82.1511 36.8395L81.8815 36.9911C81.8366 36.7103 81.7973 36.4071 81.7636 36.0814C81.7299 35.7445 81.6962 35.3907 81.6625 35.0201C81.6401 34.6382 81.6176 34.2395 81.5952 33.824C81.5839 33.3972 81.5727 32.9536 81.5615 32.4932C81.5502 32.0327 81.5446 31.5554 81.5446 31.0612V27.1866H83.364V38.9789H81.6962L74.604 29.6799L74.7893 29.444C74.8455 30.1291 74.8904 30.7131 74.9241 31.196C74.969 31.6677 75.0027 32.072 75.0252 32.4089C75.0589 32.7346 75.0813 33.0042 75.0926 33.2175C75.1038 33.4197 75.1094 33.5882 75.1094 33.7229C75.1206 33.8577 75.1263 33.9756 75.1263 34.0767V38.9789H73.3069ZM86.6653 38.9789V27.1866H91.2811C92.1234 27.1866 92.8815 27.327 93.5554 27.6078C94.2404 27.8886 94.8244 28.2929 95.3074 28.8207C95.7903 29.3486 96.1609 29.9719 96.4192 30.6906C96.6775 31.4094 96.8067 32.2068 96.8067 33.0828C96.8067 33.9588 96.6775 34.7618 96.4192 35.4918C96.1609 36.2105 95.7903 36.8338 95.3074 37.3617C94.8357 37.8783 94.2573 38.277 93.5722 38.5578C92.8871 38.8385 92.1234 38.9789 91.2811 38.9789H86.6653ZM88.4847 37.4122L88.4341 37.2269H91.1969C91.7921 37.2269 92.32 37.1315 92.7804 36.9405C93.2521 36.7496 93.6452 36.4801 93.9597 36.1319C94.2854 35.7725 94.5324 35.3345 94.7009 34.8179C94.8694 34.3013 94.9536 33.7229 94.9536 33.0828C94.9536 32.4426 94.8694 31.8699 94.7009 31.3645C94.5324 30.8479 94.2854 30.4099 93.9597 30.0505C93.634 29.6911 93.2409 29.4159 92.7804 29.225C92.32 29.0341 91.7921 28.9386 91.1969 28.9386H88.3836L88.4847 28.787V37.4122Z"
          fill="#C0C0C0"
        />
      </svg>
      <Handle
        type="target"
        position={Position.Left}
        style={{
          left: -6,
          top: 17,
          ...handleStyles,
        }}
        id="and_in_1"
      />
      <Handle
        type="target"
        position={Position.Left}
        style={{
          left: -6,
          top: 50.5,
          ...handleStyles,
        }}
        id="and_in_2"
      />
      <Handle
        type="source"
        position={Position.Right}
        style={{
          top: 33.5,
          right: -6,
          ...handleStyles,
        }}
        id="and_out_1"
      />
    </>
  );
};

export default And;
